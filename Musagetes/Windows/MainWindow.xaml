<Window
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:wpfElements="clr-namespace:Musagetes.WpfElements"
    x:Class="Musagetes.Windows.MainWindow"
	x:Name="Window"
	Title="Musagetes"
	Width="640" Height="480">
    <Window.Resources>
        <Image Source="../Collaterals/Images/PlayButton.png" x:Key="PlayButton"/>
        <Image Source="../Collaterals/Images/StopButton.png" x:Key="StopButton"/>
        <Image Source="../Collaterals/Images/PauseButton.png" x:Key="PauseButton"/>
        <Image Source="../Collaterals/Images/NextButton.png" x:Key="NextButton"/>
        <Image Source="../Collaterals/Images/BackButton.png" x:Key="BackButton"/>
        <wpfElements:ObjectToSongConverter x:Key="ToSong"/>
    </Window.Resources>

    <DockPanel>
        
        <!-- Menu Header and Filter Bar -->
        <DockPanel DockPanel.Dock="Top">
            <TextBox DockPanel.Dock="Right"
                     Width="200"
                     Padding="5"
                     Text="{Binding FilterText, UpdateSourceTrigger=PropertyChanged}"/>

            <Menu DockPanel.Dock="Left">
                <MenuItem x:Name="FileMenu" Header="File">
                    <MenuItem x:Name="AddDirMenuItem" Header="Add Directory" Command="{Binding AddDirCmd}"/>
                    <MenuItem x:Name="SaveMenuItem" Header="Save Database" Command="{Binding SaveCmd}"/>
                    <MenuItem x:Name="QuitMenuItem" Header="Quit" Command="{Binding QuitCmd}"/>
                    <MenuItem x:Name="UpdateMenutItem" Header="Update" Command="{Binding UpdateCmd}"/>
                </MenuItem>
                <MenuItem x:Name="TagMenu" Header="Tools">
                    <MenuItem Header="Edit Tags..." 
                              Command="{Binding OpenTagEditorCmd}"/>
                    <MenuItem Header="Options..." 
                              Command="{Binding ChangeGroupingCmd}"/>
                </MenuItem>
            </Menu>
        </DockPanel>

        <!-- Playback controls -->
        <Grid x:Name="PlaybackControls"  DockPanel.Dock="Bottom" Height="25">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="5*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" Command="{Binding TogglePlayCmd}">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Content" Value="{StaticResource PlayButton}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding MainPlayer.PlaybackState}" 
                                             Value="{x:Static MediaState.Play}">
                                <Setter Property="Content" 
                                            Value="{StaticResource PauseButton}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Grid.Column="1" 
                    Content="{StaticResource StopButton}" 
                    Command="{Binding StopCmd}"/>
            <Slider x:Name="VolumeSlider" 
                    Grid.Column="2" 
                    Maximum="1" 
                    Minimum="0" 
                    Value="{Binding MainPlayer.Volume}" 
                    SmallChange="0.01" 
                    LargeChange=".1" />
            <Button Grid.Column="3" Content="{StaticResource BackButton}" 
                    Command="{Binding PrevCmd}"/>
            <Slider x:Name="Timeline" Minimum="0"
                    Maximum="{Binding MainPlayer.ChannelLength}"
                    SmallChange="1"
                    LargeChange="10"
                    Value="{Binding MainPlayer.ChannelPosition}"
                    Grid.Column="4" />
            <Button Grid.Column="5" 
                    Content="{StaticResource NextButton}" 
                    Command="{Binding NextCmd}"/>
            <StackPanel Grid.Column="6" Orientation="Horizontal">
                <TextBlock Text="{Binding MainPlayer.Position}"/>
                <TextBlock Text="/"/>
                <TextBlock Text="{Binding MainPlayer.Length}"/>
            </StackPanel>
        </Grid>
        
        
        
        <Grid DockPanel.Dock="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            
            <!-- Song Queue -->
            <wpfElements:DropEnabledListBox
                x:Name="PlayQueue"
                Grid.Column="0" 
                 ItemsSource="{Binding SongQueue, Mode=TwoWay}"
                 DropCommand="{Binding QueueDropCmd}"
                 AllowDrop="True"
                 SelectedItem="{Binding SelectedInQueue, Mode=TwoWay}"
                 SelectedIndex="{Binding QueueSelectionIndex, Mode=TwoWay}"
                 InUseIndex="{Binding CurrentSongIndex, Mode=TwoWay}"
                 >
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel>
                            <TextBlock Text="{Binding SongTitle}"/>
                            <TextBlock Text="{Binding Length}"/>
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <wpfElements:DropEnabledListBox.HighlightStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="BorderBrush" Value="LightSeaGreen"/>
                        <Setter Property="BorderThickness" Value="0 2 0 0" />
                    </Style>
                </wpfElements:DropEnabledListBox.HighlightStyle>
                <wpfElements:DropEnabledListBox.InUseStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="Background" Value="LightSalmon"/>
                    </Style>
                </wpfElements:DropEnabledListBox.InUseStyle>
                <ListBox.InputBindings>
                    <KeyBinding Key="Delete" Command="{Binding RemoveFromQueueCmd}"/>
                </ListBox.InputBindings>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <i:InvokeCommandAction Command="{Binding SwitchToSongCmd}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="LostKeyboardFocus">
                        <i:InvokeCommandAction Command="{Binding ClearQueueSelectionCmd}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </wpfElements:DropEnabledListBox>
            
            
            <!-- Song Display -->
            <GridSplitter Grid.Column ="1" Background="LightGray" Width="3"
                HorizontalAlignment="Center" VerticalAlignment="Stretch"
                          ShowsPreview="True"/>
            <wpfElements:MusagetesDataGrid Grid.Column="2"
                  ItemsSource="{Binding DisplayedSongs, IsAsync=True}" 
                  AutoGenerateColumns="False"
                  SelectionMode="Extended"
                  CanUserResizeRows="False"
                  x:Name="SongList"
                  VirtualizingPanel.IsVirtualizing="True"
                  VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                  SelectedItemsList="{Binding TagEditorVm.Songs, Mode=OneWayToSource}"
                  SelectedItem="{Binding SelectedInGrid}"
                  wpfElements:DataGridColumnsBehavior.BindableColumns=
                                     "{Binding ColumnManager.Columns, Mode=OneWay}"
                  PreviewTarget="{Binding PreviewSong, Mode=OneWayToSource, 
                    Converter={StaticResource ToSong}}"
                    HeadersVisibility="Column" Padding="0"
                    IsReadOnly="False"
                  wpfElements:DataGridSortingBehavior.UseBindingToSort="True"
                >
                <DataGrid.Resources>
                    <wpfElements:BindingProxy x:Key="DataGridProxy" Data="{Binding}"/>
                </DataGrid.Resources>
                
                <!-- Song Preview Popup -->
                <wpfElements:MusagetesDataGrid.ContextPopup>
                    <Popup Height="Auto" Width="275" 
                           IsOpen="False" StaysOpen="False">
                        <Grid Background="White">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="42" />
                            </Grid.RowDefinitions>
                            <Image Grid.Column="0" Grid.Row="0" 
                                   Source="{Binding Art}" 
                                   MaxHeight="100" MaxWidth="100"
                                   Margin="5"/>
                            <Grid Grid.Column="1" Grid.Row="0" Margin="5">
                                <StackPanel Orientation="Vertical">
                                    <StackPanel.Resources>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="TextWrapping" Value="Wrap"/>
                                        </Style>
                                    </StackPanel.Resources>
                                    <TextBox Text="{Binding SongTitle,
                                        UpdateSourceTrigger=PropertyChanged}" />
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="Play Count: "/>
                                        <RepeatButton Content="&lt;" 
                                                Command="{Binding Data.DecrementPlayCountCmd,
                                            Source={StaticResource DataGridProxy}}"/>
                                        <TextBlock Text="{Binding PlayCount}"/>
                                        <RepeatButton Content="&gt;" 
                                                Command="{Binding Data.IncrementPlayCountCmd,
                                            Source={StaticResource DataGridProxy}}"/>
                                    </StackPanel>
                                    <TextBlock Text="{Binding CategoryTags[Artist]}" />
                                    <TextBlock Text="{Binding CategoryTags[Album]}" />
                                    <Button Command="{Binding Data.TogglePreviewCmd,
                                            Source={StaticResource DataGridProxy}}">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Content" Value="Preview"/>
                                                <Style.Triggers>
                                                    <DataTrigger 
                                                            Binding="{Binding Data.PreviewPlayer.PlaybackState,
                                                            Source={StaticResource DataGridProxy}}" 
                                                             Value="{x:Static MediaState.Play}">
                                                        <Setter Property="Content" Value="Pause Preview"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                    <Slider 
                                        Maximum="1" 
                                        Minimum="0" 
                                        Value="{Binding Data.PreviewPlayer.Volume,
                                        Source={StaticResource DataGridProxy}}" 
                                        SmallChange="0.01" 
                                        LargeChange=".1" />
                                    <StackPanel Orientation="Horizontal">
                                        <Button DataContext="{Binding Data.BpmCalc, 
                                            Source={StaticResource DataGridProxy}}" 
                                            Command="{Binding RegisterTap}"
                                            Margin="2"
                                            Content="Tap Beats"/>
                                        <TextBlock Text="{Binding Data.BpmCalc.Value,
                                            Source={StaticResource DataGridProxy}}"
                                                   Margin="2"/>
                                        <Button Content="Save" 
                                                Margin="2"
                                                Command="{Binding Data.SaveBpmCmd, 
                                                    Source={StaticResource DataGridProxy}}" >
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}">
                                                    <Setter Property="IsEnabled" Value="False"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Data.BpmCalc.IsTapping,
                                                                    Source={StaticResource DataGridProxy}}" 
                                                             Value="True">
                                                            <Setter Property="IsEnabled" Value="True"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                    </StackPanel>
                                </StackPanel>
                            </Grid>
                            
                            <!-- Preview Player Controls -->
                            <Grid Grid.Column="0" Grid.Row="1"
                                        Grid.ColumnSpan="2" 
                                        Margin="5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" 
                                       Margin="2"
                                       Text="{Binding Data.PreviewPlayer.Position,
                                    Source={StaticResource DataGridProxy}}"/>
                                <TextBlock Grid.Column="2" 
                                       Margin="2"
                                       Text="{Binding Data.PreviewPlayer.Length,
                                    Source={StaticResource DataGridProxy}}"/>
                                <Slider Grid.Column="1" x:Name="PreviewTimeline" 
                                    Minimum="0"
                                    Maximum="{Binding Data.PreviewPlayer.ChannelLength,
                                Source={StaticResource DataGridProxy}}"
                                    Value="{Binding Data.PreviewPlayer.ChannelPosition,
                                Source={StaticResource DataGridProxy}}"
                                    SmallChange="1"
                                    LargeChange="10"
                                    />
                            </Grid>
                        </Grid>
                    </Popup>
                </wpfElements:MusagetesDataGrid.ContextPopup>
                
                
                <!-- Song Row Styles -->
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="Template">
                            <!--set all this control template nonsense to work around WPF bug -->
                            <Setter.Value>
                                <ControlTemplate TargetType="DataGridRow">
                                    <Border 
                                        BorderThickness="{TemplateBinding Border.BorderThickness}" 
                                        BorderBrush="{TemplateBinding Border.BorderBrush}" 
                                        Background="{TemplateBinding Panel.Background}" 
                                        Name="DGR_Border" 
                                        SnapsToDevicePixels="True">
                                        <SelectiveScrollingGrid>
                                            <DataGridCellsPresenter 
                                                ItemsPanel="{TemplateBinding ItemsControl.ItemsPanel}" 
                                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                                        </SelectiveScrollingGrid>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="LightCyan"/>
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding IsBadSong}" Value="True">
                                <Setter Property="Background" Value="DarkRed"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="ToolTip" Value="{Binding SongError}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
                
                
                <!-- Song Grouping Styles -->
                <DataGrid.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.Panel>
                            <ItemsPanelTemplate>
                                <DataGridRowsPresenter/>
                            </ItemsPanelTemplate>
                        </GroupStyle.Panel>
                        <GroupStyle.ContainerStyle>
                            <Style TargetType="{x:Type GroupItem}">
                                <Setter Property="Margin" Value="0,0,0,5"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type GroupItem}">
                                            <Expander IsExpanded="True">
                                                <Expander.Header>
                                                    <DockPanel>
                                                        <TextBlock Text="{Binding Path=Name}"/>
                                                        <TextBlock Text=" ("/>
                                                        <TextBlock Text="{Binding Path=ItemCount}"/>
                                                        <TextBlock Text=" songs)"/>
                                                    </DockPanel>
                                                </Expander.Header>
                                                <Expander.Content>
                                                    <ItemsPresenter />
                                                </Expander.Content>
                                            </Expander>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </GroupStyle.ContainerStyle>
                    </GroupStyle>
                </DataGrid.GroupStyle>
            </wpfElements:MusagetesDataGrid>
            <GridSplitter Grid.Column ="3" Background="LightGray" Width="3"
                HorizontalAlignment="Center" VerticalAlignment="Stretch"
                          ShowsPreview="True"/>
            
            
            <!-- Song Tag Editor -->
            <Grid Grid.Column="4">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="2*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="3*"/>
                </Grid.RowDefinitions>
                <TextBlock HorizontalAlignment="Center" Grid.Row="0"
                        TextWrapping="Wrap"
                        TextAlignment="Center"
                       Text="{Binding SelectedInGrid}" />
                <TextBlock Text="{Binding TagEditorVm.TagHeader}" Grid.Row="1"/>
                <ListBox ItemsSource="{Binding TagEditorVm.TagList}" Grid.Row="2" 
                     SelectedItem="{Binding TagEditorVm.SelectedOldTag}"
                     SelectedIndex="{Binding TagEditorVm.TagListIndex}"
                     >
                    <ListBox.InputBindings>
                        <KeyBinding Key="Delete" Command="{Binding TagEditorVm.RemoveTagCmd}"/>
                    </ListBox.InputBindings>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding TagEditorVm.RemoveTagCmd}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ListBox>
                <TextBox x:Name="TagPrefixBox"
                     Text="{Binding TagEditorVm.Prefix, UpdateSourceTrigger=PropertyChanged}" 
                     PreviewKeyDown="TagPrefixBox_OnPreviewKeyDown" 
                     Grid.Row="3" >
                    <TextBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding TagEditorVm.CreateNewTagCmd}"/>
                    </TextBox.InputBindings>
                </TextBox>
                <ListBox x:Name="TagPredictionBox"
                     PreviewKeyDown="TagPredictionBox_OnPreviewKeyDown"
                     Height="300"
                     ItemsSource="{Binding TagEditorVm.Prediction}"
                     SelectedIndex="{Binding TagEditorVm.SelectedIndex}" Grid.Row="4"
                     SelectedItem="{Binding TagEditorVm.SelectedNewTag, Mode=OneWayToSource}">
                    <ListBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding TagEditorVm.AddTagCmd}"/>
                    </ListBox.InputBindings>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding TagEditorVm.AddTagCmd}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ListBox>
            </Grid>
        </Grid>
    </DockPanel>
</Window>