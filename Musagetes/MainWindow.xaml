<Window
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Musagetes"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:wpfElements="clr-namespace:Musagetes.WpfElements"
    x:Class="Musagetes.MainWindow"
	x:Name="Window"
	Title="Musagetes"
	Width="640" Height="480">
    <Window.Resources>
    </Window.Resources>

    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem x:Name="FileMenu" Header="File">
                <MenuItem x:Name="AddDirMenuItem" Header="Add Directory" Command="{Binding AddDirCmd}"/>
                <MenuItem x:Name="SaveMenuItem" Header="Save Database" Command="{Binding SaveCmd}"/>
                <MenuItem x:Name="QuitMenuItem" Header="Quit" Command="{Binding QuitCmd}"/>
                <MenuItem x:Name="UpdateMenutItem" Header="Update" Command="{Binding UpdateCmd}"/>
            </MenuItem>
            <MenuItem x:Name="TagMenu" Header="Tags">
                <MenuItem Header="Edit Tags..." Command="{Binding EditTagsCmd}"/>
                <MenuItem Header="Refresh Tags" Command="{Binding RefreshTagsCmd}"/>
                <MenuItem Header="Change Category Display..." Command="{Binding ChangeGroupingCmd}"/>
            </MenuItem>
        </Menu>
        <Grid x:Name="PlaybackControls"  DockPanel.Dock="Bottom">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="5*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" Content="Play/Pause" Command="{Binding PlayCmd}"/>
            <Slider x:Name="VolumeSlider" Grid.Column="1" 
                    Maximum="1" Minimum="0" Value=".5" SmallChange="0.01" LargeChange=".1" />
            <Button Grid.Column="2" Content="Prev" Command="{Binding StopCmd}"/>
            <Slider x:Name="PositionSlider"  Grid.Column="3" 
                    Maximum="{Binding SelectedSong.Milliseconds}" Minimum="0" 

                    Value="{Binding ElementName=Media, Path=Position.TotalMilliseconds, Mode=OneWay}"/>
            <Button Grid.Column="4" Content="Next" Command="{Binding StopCmd}"/>
        </Grid>
        <MediaElement x:Name="Media"
                      Source="{Binding SelectedSong.Location}"
                      LoadedBehavior="Manual"
                      wpfElements:PlaybackControlBehavior.PlaybackState="{Binding PlaybackState}"
                      Volume="{Binding ElementName=VolumeSlider, Path=Value}"
                      wpfElements:PlaybackControlBehavior.Milliseconds="{Binding CurrentTime, Mode=TwoWay}"
                      />
        <Grid DockPanel.Dock="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <ListBox Grid.Column="0" 
                 ItemsSource="{Binding SongQueue, Mode=TwoWay}"
                 wpfElements:DragAndDropBehavior.DragAndDropBehaviour="{Binding QueueDropCmd}"
                 AllowDrop="True"
                 SelectedItem="{Binding SelectedInQueue, Mode=TwoWay}"
                 >
                <ListBox.InputBindings>
                    <KeyBinding Key="Delete" Command="{Binding RemoveFromQueueCmd}"/>
                </ListBox.InputBindings>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <i:InvokeCommandAction Command="{Binding SwitchToSongCmd}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ListBox>
            <GridSplitter Grid.Column ="1" Background="LightGray" Width="3"
                HorizontalAlignment="Center" VerticalAlignment="Stretch"
                          ShowsPreview="True"/>
            <wpfElements:WpfDataGrid Grid.Column="2"
                  ItemsSource="{Binding DisplayedSongs, IsAsync=True}" 
                  AutoGenerateColumns="False"
                  SelectionMode="Extended" 
                  IsReadOnly="True"
                  CanUserResizeRows="False"
                  x:Name="SongList"
                  VirtualizingPanel.IsVirtualizing="True"
                  VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                  SelectedItemsList="{Binding TagEditorVm.Songs, Mode=OneWayToSource}"
                  wpfElements:DataGridColumnsBehavior.BindableColumns="{Binding ColumnManager.Columns, Mode=OneWay}"
                  SelectedItem="{Binding SelectedSong, Mode=OneWayToSource}">
                <DataGrid.ContextMenu>
                    <ContextMenu >
                        <MenuItem Header="Edit Tags" Command="{Binding OpenContextMenu}"/>
                    </ContextMenu>
                </DataGrid.ContextMenu>
                <DataGrid.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.Panel>
                            <ItemsPanelTemplate>
                                <DataGridRowsPresenter/>
                            </ItemsPanelTemplate>
                        </GroupStyle.Panel>
                        <GroupStyle.ContainerStyle>
                            <Style TargetType="{x:Type GroupItem}">
                                <Setter Property="Margin" Value="0,0,0,5"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type GroupItem}">
                                            <Expander IsExpanded="True">
                                                <Expander.Header>
                                                    <DockPanel>
                                                        <TextBlock Text="{Binding Path=Name}"/>
                                                        <TextBlock Text=" ("/>
                                                        <TextBlock Text="{Binding Path=ItemCount}"/>
                                                        <TextBlock Text=" songs)"/>
                                                    </DockPanel>
                                                </Expander.Header>
                                                <Expander.Content>
                                                    <ItemsPresenter />
                                                </Expander.Content>
                                            </Expander>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </GroupStyle.ContainerStyle>
                    </GroupStyle>
                </DataGrid.GroupStyle>
            </wpfElements:WpfDataGrid>
            <GridSplitter Grid.Column ="3" Background="LightGray" Width="3"
                HorizontalAlignment="Center" VerticalAlignment="Stretch"
                          ShowsPreview="True"/>
            <Grid Grid.Column="4">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="2*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="3*"/>
                </Grid.RowDefinitions>
                <TextBlock HorizontalAlignment="Center" Grid.Row="0"
                        TextWrapping="Wrap"
                        TextAlignment="Center"
                       Text="{Binding SelectedSong}" />
                <TextBlock Text="{Binding TagEditorVm.TagHeader}" Grid.Row="1"/>
                <ListBox ItemsSource="{Binding TagEditorVm.TagList}" Grid.Row="2" 
                     SelectedItem="{Binding TagEditorVm.SelectedOldTag}"
                     SelectedIndex="{Binding TagEditorVm.TagListIndex}"
                     >
                    <ListBox.InputBindings>
                        <KeyBinding Key="Delete" Command="{Binding TagEditorVm.RemoveTagCmd}"/>
                    </ListBox.InputBindings>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding TagEditorVm.RemoveTagCmd}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ListBox>
                <TextBox x:Name="TagPrefixBox"
                     Text="{Binding TagEditorVm.Prefix, UpdateSourceTrigger=PropertyChanged}" 
                     PreviewKeyDown="TagPrefixBox_OnPreviewKeyDown" 
                     Grid.Row="3" >
                    <TextBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding TagEditorVm.CreateNewTagCmd}"/>
                    </TextBox.InputBindings>
                </TextBox>
                <ListBox x:Name="TagPredictionBox"
                     PreviewKeyDown="TagPredictionBox_OnPreviewKeyDown"
                     Height="300"
                     ItemsSource="{Binding TagEditorVm.Prediction}"
                     SelectedIndex="{Binding TagEditorVm.SelectedIndex}" Grid.Row="4"
                     SelectedItem="{Binding TagEditorVm.SelectedNewTag, Mode=OneWayToSource}">
                    <ListBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding TagEditorVm.AddTagCmd}"/>
                    </ListBox.InputBindings>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding TagEditorVm.AddTagCmd}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ListBox>
            </Grid>
        </Grid>
    </DockPanel>
</Window>