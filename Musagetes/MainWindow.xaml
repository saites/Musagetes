<Window
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:wpfElements="clr-namespace:Musagetes.WpfElements"
    xmlns:svl="clr-namespace:WPFSoundVisualizationLib;assembly=WPFSoundVisualizationLib"
    xmlns:nad="clr-namespace:NAudio.Gui;assembly=NAudio"
    x:Class="Musagetes.MainWindow"
	x:Name="Window"
	Title="Musagetes"
	Width="640" Height="480">
    <Window.Resources>
        <Image Source="Collaterals/Images/PlayButton.png" x:Key="PlayButton"/>
        <Image Source="Collaterals/Images/StopButton.png" x:Key="StopButton"/>
        <Image Source="Collaterals/Images/PauseButton.png" x:Key="PauseButton"/>
        <Image Source="Collaterals/Images/NextButton.png" x:Key="NextButton"/>
        <Image Source="Collaterals/Images/BackButton.png" x:Key="BackButton"/>
        <wpfElements:ObjectToSongConverter x:Key="ToSong"/>
    </Window.Resources>

    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem x:Name="FileMenu" Header="File">
                <MenuItem x:Name="AddDirMenuItem" Header="Add Directory" Command="{Binding AddDirCmd}"/>
                <MenuItem x:Name="SaveMenuItem" Header="Save Database" Command="{Binding SaveCmd}"/>
                <MenuItem x:Name="QuitMenuItem" Header="Quit" Command="{Binding QuitCmd}"/>
                <MenuItem x:Name="UpdateMenutItem" Header="Update" Command="{Binding UpdateCmd}"/>
            </MenuItem>
            <MenuItem x:Name="TagMenu" Header="Tags">
                <MenuItem Header="Refresh Tags" Command="{Binding RefreshTagsCmd}"/>
                <MenuItem Header="Change Category Display..." Command="{Binding ChangeGroupingCmd}"/>
            </MenuItem>
        </Menu>
        <Grid x:Name="PlaybackControls"  DockPanel.Dock="Bottom" Height="100">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="5*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" Command="{Binding TogglePlayCmd}">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Content" Value="{StaticResource PlayButton}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding MainPlayer.PlaybackState}" 
                                             Value="{x:Static MediaState.Play}">
                                <Setter Property="Content" 
                                            Value="{StaticResource PauseButton}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Grid.Column="1" 
                    Content="{StaticResource StopButton}" 
                    Command="{Binding StopCmd}"/>
            <Slider x:Name="VolumeSlider" 
                    Grid.Column="2" 
                    Maximum="1" 
                    Minimum="0" 
                    Value=".5" 
                    SmallChange="0.01" 
                    LargeChange=".1" />
            <Button Grid.Column="3" Content="{StaticResource BackButton}" 
                    Command="{Binding PrevCmd}"/>
            <svl:WaveformTimeline x:Name="Timeline"
                    Grid.Column="4" />
            <Button Grid.Column="5" 
                    Content="{StaticResource NextButton}" 
                    Command="{Binding NextCmd}"/>
            <Slider x:Name="DeviceSlider"
                    Grid.Column="6"
                    Maximum="{Binding DeviceCount}"
                    Minimum="0"
                    Value="{Binding MainPlayer.DeviceNumber}"
                    SmallChange="1"
                    LargeChange="1" />
        </Grid>
        <Grid DockPanel.Dock="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <ListBox Grid.Column="0" 
                 ItemsSource="{Binding SongQueue, Mode=TwoWay}"
                 wpfElements:DragAndDropBehavior.DragAndDropBehaviour="{Binding QueueDropCmd}"
                 AllowDrop="True"
                 SelectedItem="{Binding SelectedInQueue, Mode=TwoWay}"
                 >
                <ListBox.InputBindings>
                    <KeyBinding Key="Delete" Command="{Binding RemoveFromQueueCmd}"/>
                </ListBox.InputBindings>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <i:InvokeCommandAction Command="{Binding SwitchToSongCmd}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ListBox>
            <GridSplitter Grid.Column ="1" Background="LightGray" Width="3"
                HorizontalAlignment="Center" VerticalAlignment="Stretch"
                          ShowsPreview="True"/>
            <wpfElements:MusagetesDataGrid Grid.Column="2"
                  ItemsSource="{Binding DisplayedSongs, IsAsync=True}" 
                  AutoGenerateColumns="False"
                  SelectionMode="Extended"
                  CanUserResizeRows="False"
                  x:Name="SongList"
                  VirtualizingPanel.IsVirtualizing="True"
                  VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                  SelectedItemsList="{Binding TagEditorVm.Songs, Mode=OneWayToSource}"
                  SelectedItem="{Binding SelectedInGrid}"
                  wpfElements:DataGridColumnsBehavior.BindableColumns=
                                     "{Binding ColumnManager.Columns, Mode=OneWay}"
                  PreviewTarget="{Binding PreviewPlayer.Song, Mode=OneWayToSource, Converter={StaticResource ToSong}}"
                >
                <wpfElements:MusagetesDataGrid.Resources>
                    <wpfElements:BindingProxy x:Key="DataGridProxy" Data="{Binding}"/>
                </wpfElements:MusagetesDataGrid.Resources>
                <wpfElements:MusagetesDataGrid.ContextPopup>
                    <Popup Height="Auto" Width="250" 
                           IsOpen="False" StaysOpen="False">
                        <Grid Background="White">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="42" />
                            </Grid.RowDefinitions>
                            <Image Grid.Column="0" Grid.Row="0" 
                                   Source="{Binding Art}" 
                                   MaxHeight="100" MaxWidth="100"
                                   Margin="5"/>
                            <Grid Grid.Column="1" Grid.Row="0" Margin="5">
                                <StackPanel Orientation="Vertical">
                                    <StackPanel.Resources>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="TextWrapping" Value="Wrap"/>
                                        </Style>
                                    </StackPanel.Resources>
                                    <TextBlock Text="{Binding SongTitle}" />
                                    <TextBlock Text="{Binding CategoryTags[Artist]}" />
                                    <TextBlock Text="{Binding CategoryTags[Album]}" />
                                    <StackPanel>
                                        <Button Content="Play" Command="{Binding Data.TogglePreviewCmd,
                                            Source={StaticResource DataGridProxy}}"/>
                                    </StackPanel>
                                </StackPanel>
                            </Grid>
                            <svl:WaveformTimeline x:Name="PreviewTimeline" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" Margin="5" />
                        </Grid>
                    </Popup>
                </wpfElements:MusagetesDataGrid.ContextPopup>
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="LightCyan"/>
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.Panel>
                            <ItemsPanelTemplate>
                                <DataGridRowsPresenter/>
                            </ItemsPanelTemplate>
                        </GroupStyle.Panel>
                        <GroupStyle.ContainerStyle>
                            <Style TargetType="{x:Type GroupItem}">
                                <Setter Property="Margin" Value="0,0,0,5"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type GroupItem}">
                                            <Expander IsExpanded="True">
                                                <Expander.Header>
                                                    <DockPanel>
                                                        <TextBlock Text="{Binding Path=Name}"/>
                                                        <TextBlock Text=" ("/>
                                                        <TextBlock Text="{Binding Path=ItemCount}"/>
                                                        <TextBlock Text=" songs)"/>
                                                    </DockPanel>
                                                </Expander.Header>
                                                <Expander.Content>
                                                    <ItemsPresenter />
                                                </Expander.Content>
                                            </Expander>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </GroupStyle.ContainerStyle>
                    </GroupStyle>
                </DataGrid.GroupStyle>
            </wpfElements:MusagetesDataGrid>
            <GridSplitter Grid.Column ="3" Background="LightGray" Width="3"
                HorizontalAlignment="Center" VerticalAlignment="Stretch"
                          ShowsPreview="True"/>
            <Grid Grid.Column="4">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="2*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="3*"/>
                </Grid.RowDefinitions>
                <TextBlock HorizontalAlignment="Center" Grid.Row="0"
                        TextWrapping="Wrap"
                        TextAlignment="Center"
                       Text="{Binding SelectedInGrid}" />
                <TextBlock Text="{Binding TagEditorVm.TagHeader}" Grid.Row="1"/>
                <ListBox ItemsSource="{Binding TagEditorVm.TagList}" Grid.Row="2" 
                     SelectedItem="{Binding TagEditorVm.SelectedOldTag}"
                     SelectedIndex="{Binding TagEditorVm.TagListIndex}"
                     >
                    <ListBox.InputBindings>
                        <KeyBinding Key="Delete" Command="{Binding TagEditorVm.RemoveTagCmd}"/>
                    </ListBox.InputBindings>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding TagEditorVm.RemoveTagCmd}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ListBox>
                <TextBox x:Name="TagPrefixBox"
                     Text="{Binding TagEditorVm.Prefix, UpdateSourceTrigger=PropertyChanged}" 
                     PreviewKeyDown="TagPrefixBox_OnPreviewKeyDown" 
                     Grid.Row="3" >
                    <TextBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding TagEditorVm.CreateNewTagCmd}"/>
                    </TextBox.InputBindings>
                </TextBox>
                <ListBox x:Name="TagPredictionBox"
                     PreviewKeyDown="TagPredictionBox_OnPreviewKeyDown"
                     Height="300"
                     ItemsSource="{Binding TagEditorVm.Prediction}"
                     SelectedIndex="{Binding TagEditorVm.SelectedIndex}" Grid.Row="4"
                     SelectedItem="{Binding TagEditorVm.SelectedNewTag, Mode=OneWayToSource}">
                    <ListBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding TagEditorVm.AddTagCmd}"/>
                    </ListBox.InputBindings>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding TagEditorVm.AddTagCmd}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ListBox>
            </Grid>
        </Grid>
    </DockPanel>
</Window>